@use "@/styles/mixins.scss" as *;
@use "sass:math";
@import "@/styles/nullstyle.scss";

@tailwind base;
@tailwind components;
@tailwind utilities;

$fontSize: 16px;

//Minimum page width
$minWidth: 320;
// The width of the canvas (layout)
$maxWidth: 1920;
// The width of a restrictive container (0 = no restrictions)
$maxWidthContainer: 0;
// The total indentation of the container
// (30 = 15px left and right, 0 = no retreat)
$containerPadding: 30;

// Type Adaptive:
// 1 = responsiveness (the container has no breakpoints)
// 2 = by break-pointes (the container changes the width of the break-point
$responsiveType: 1;

// The width of the first break point
$containerWidth: $maxWidthContainer + $containerPadding;

// Break-point
$pc: em($containerWidth); // PC, laptops, some tablets in horizontal position
$tablet: em(991.98); // Tablets, some phones in horizontal position
$mobile: em(767.98); // Phones L
$mobileSmall: em(479.98); // Phones S

body {
  .lock & {
    overflow: hidden;
    touch-action: none;
    overscroll-behavior: none;
  }
}

html {
  font-size: $fontSize;
}

body,
html {
  width: 100%;
}

.wrapper {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  // Attach Footer to the bottom
  main {
    flex: 1 1 auto;
  }
  // Fix sliders
  > * {
    min-width: 0;
  }
}

@if ($responsiveType==1) {
  // Sensitive
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: math.div($maxWidthContainer, 14) + rem;
      box-sizing: content-box;
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
} @else {
  // By break-pointes
  [class*="__container"] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: math.div($maxWidthContainer, 14) + rem;
      box-sizing: content-box;
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

@layer base {
  :root {
    --primary-500: #ff8a24;
    --primary-600: #e67511;
    --primary-700: #d35e05;
    --primary-800: #d14200;
    --secondary-500: #80dfff;
    --secondary-600: #5cd6ff;
    --secondary-700: #33ccff;
    --off-white: #d1e0ff;
    --dark-1: #000000;
    --dark-2: #0a0a0b;
    --dark-3: #111113;
    --dark-4: #1f1f23;
    --dark-5: #2f2f32;
    --dark-6: #3e3e41;
    --light-1: #ffffff;
    --light-2: #fffaf0;
    --light-3: #fff7eb;
    --light-4: #fff0e5;
    --light-5: #ffe6db;
    --light-6: #ffe8d6;
  }

  .dark {
    --primary-500: #ff8a24;
    --primary-600: #e67511;
    --primary-700: #d35e05;
    --primary-800: #d14200;
    --secondary-500: #80dfff;
    --secondary-600: #5cd6ff;
    --secondary-700: #33ccff;
    --off-white: #d1e0ff;
    --light-1: #000000;
    --light-2: #0a0a0b;
    --light-3: #111113;
    --light-4: #1f1f23;
    --light-5: #2f2f32;
    --light-6: #3e3e41;
    --dark-1: #ffffff;
    --dark-2: #fffaf0;
    --dark-3: #fff7eb;
    --dark-4: #fff0e5;
    --dark-5: #ffe6db;
    --dark-6: #ffe8d6;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

.product-list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 20px;
  margin: 20px 0;
}

.pagination {
  display: flex;
  justify-content: center;
  margin: 20px 0;
}

.product-images img {
  max-width: 100px;
  margin: 10px;
}
.inner-shadow-primary {
  box-shadow: 0px 0px 15px 5px var(--light-2) inset;
}
.inner-shadow-primary:hover {
  box-shadow: 0px 0px 15px 5px var(--light-6) inset;
}
